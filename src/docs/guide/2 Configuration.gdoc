There are several configuration options for the plugin, but most are related to mxml compilation and html wrapper file generation.

h4. Core properties

There are only two 'core' properties and only one is required - @grails.plugin.flex.home@ - and only if the @FLEX_HOME@ environment variable is not set.

{table}
*Property* | *Default* | *Meaning*
grails.plugin.flex.home | none, must be set | Location of your Flex SDK
grails.plugin.flex.webtier.compiler.enabled | @true@ in development | whether the webtier MXML compiler is enabled
{table}

h4. MXMLC properties

There are also several properties that configure mxml compilation, both automatic precompilation when building a war file and explicit compilation when running the [compile-mxml|Scripts] script.

{table}
*Property* | *Default* | *Meaning*
grails.plugin.flex.precompileMxml.enabled | @false@ | Set to @true@ to precompile mxml files to swf files when creating a war
grails.plugin.flex.precompileMxml.files | none | A list of file names (relative to the @web-app@ folder) to precompile
grails.plugin.flex.mxmlc.keepGenerated | @false@ | Set to @true@ keep the files generated by the compiler
grails.plugin.flex.mxmlc.extraSourcePaths | none | A list of extra source paths
grails.plugin.flex.mxmlc.extraLibPaths | none | A list of extra library paths
grails.plugin.flex.mxmlc.compileTimeConstants | none | A map of compile-time constants
grails.plugin.flex.mxmlc.contextRoot | application name | The context root of the web application, used to calculate AMF channel URLs
grails.plugin.flex.mxmlc.incremental | @false@ | When incremental compilation is enabled, the compiler inspects changes to the bytecode between revisions and only recompiles the section of bytecode that has changed.
grails.plugin.flex.mxmlc.debug | @false@ | If @true@ generates a debug SWF file which includes line numbers and filenames of all source files.
grails.plugin.flex.mxmlc.verboseStacktraces | @false@ | If @true@ generates source code that includes line numbers for display in stacktraces when a runtime error occurs.
grails.plugin.flex.mxmlc.actionscriptFileEncoding | none | Sets the .as file encoding so that the compiler correctly interprets ActionScript files.
grails.plugin.flex.mxmlc.accessible | @false@ | Enables accessibility features
grails.plugin.flex.mxmlc.headless | @false@ | Enables the headless implementation of the Flex compiler; required to use fonts and SVG on UNIX systems without X Windows.
grails.plugin.flex.mxmlc.optimize | @true@ | Enables the ActionScript optimizer which reduces file size and increases performance by optimizing the SWF file's bytecode.
{table}

h4. HTML wrapper properties

The remaining properties configure the generation of an html wrapper to load a swf file.

{table}
*Property* | *Default* | *Meaning*
grails.plugin.flex.mxmlc.htmlWrapper.create | @false@ | if @true@ then an html wrapper file will be created when precompiling
grails.plugin.flex.mxmlc.htmlWrapper.title | MXML file name | The HTML title tag value
grails.plugin.flex.mxmlc.htmlWrapper.extension | gsp | The extension for the html file
grails.plugin.flex.mxmlc.htmlWrapper.history | @false@ | If true creates resources for history tracking
grails.plugin.flex.mxmlc.htmlWrapper.height | @100%@ | The height of the swf in the page
grails.plugin.flex.mxmlc.htmlWrapper.width | @100%@ | The width of the swf in the page
grails.plugin.flex.mxmlc.htmlWrapper.bgcolor | @#ffffff@ | The background color for the page
grails.plugin.flex.mxmlc.htmlWrapper.version.major | @10@ | The minimum required Flash major version
grails.plugin.flex.mxmlc.htmlWrapper.version.minor | @0@ | The minimum required Flash minor version
grails.plugin.flex.mxmlc.htmlWrapper.version.revision | @0@ | The minimum required Flash revision version
{table}

